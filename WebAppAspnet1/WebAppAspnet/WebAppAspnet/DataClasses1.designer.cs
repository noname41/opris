#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppAspnet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OPRIS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertTable_AdCompany(Table_AdCompany instance);
    partial void UpdateTable_AdCompany(Table_AdCompany instance);
    partial void DeleteTable_AdCompany(Table_AdCompany instance);
    partial void InsertTable_Ads(Table_Ads instance);
    partial void UpdateTable_Ads(Table_Ads instance);
    partial void DeleteTable_Ads(Table_Ads instance);
    partial void InsertTable_Company(Table_Company instance);
    partial void UpdateTable_Company(Table_Company instance);
    partial void DeleteTable_Company(Table_Company instance);
    partial void InsertTable_RubAd(Table_RubAd instance);
    partial void UpdateTable_RubAd(Table_RubAd instance);
    partial void DeleteTable_RubAd(Table_RubAd instance);
    partial void InsertTable_Rubrics(Table_Rubrics instance);
    partial void UpdateTable_Rubrics(Table_Rubrics instance);
    partial void DeleteTable_Rubrics(Table_Rubrics instance);
    partial void InsertTable_Users(Table_Users instance);
    partial void UpdateTable_Users(Table_Users instance);
    partial void DeleteTable_Users(Table_Users instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OPRISConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_AdCompany> Table_AdCompany
		{
			get
			{
				return this.GetTable<Table_AdCompany>();
			}
		}
		
		public System.Data.Linq.Table<Table_Ads> Table_Ads
		{
			get
			{
				return this.GetTable<Table_Ads>();
			}
		}
		
		public System.Data.Linq.Table<Table_Company> Table_Company
		{
			get
			{
				return this.GetTable<Table_Company>();
			}
		}
		
		public System.Data.Linq.Table<Table_RubAd> Table_RubAd
		{
			get
			{
				return this.GetTable<Table_RubAd>();
			}
		}
		
		public System.Data.Linq.Table<Table_Rubrics> Table_Rubrics
		{
			get
			{
				return this.GetTable<Table_Rubrics>();
			}
		}
		
		public System.Data.Linq.Table<Table_Users> Table_Users
		{
			get
			{
				return this.GetTable<Table_Users>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_AdCompany")]
	public partial class Table_AdCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Ad;
		
		private int _id_Company;
		
		private EntityRef<Table_Ads> _Table_Ads;
		
		private EntityRef<Table_Company> _Table_Company;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_AdChanging(int value);
    partial void Onid_AdChanged();
    partial void Onid_CompanyChanging(int value);
    partial void Onid_CompanyChanged();
    #endregion
		
		public Table_AdCompany()
		{
			this._Table_Ads = default(EntityRef<Table_Ads>);
			this._Table_Company = default(EntityRef<Table_Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Ad", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_Ad
		{
			get
			{
				return this._id_Ad;
			}
			set
			{
				if ((this._id_Ad != value))
				{
					if (this._Table_Ads.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_AdChanging(value);
					this.SendPropertyChanging();
					this._id_Ad = value;
					this.SendPropertyChanged("id_Ad");
					this.Onid_AdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Company", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_Company
		{
			get
			{
				return this._id_Company;
			}
			set
			{
				if ((this._id_Company != value))
				{
					if (this._Table_Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_CompanyChanging(value);
					this.SendPropertyChanging();
					this._id_Company = value;
					this.SendPropertyChanged("id_Company");
					this.Onid_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Ads_Table_AdCompany", Storage="_Table_Ads", ThisKey="id_Ad", OtherKey="id_Ad", IsForeignKey=true)]
		public Table_Ads Table_Ads
		{
			get
			{
				return this._Table_Ads.Entity;
			}
			set
			{
				Table_Ads previousValue = this._Table_Ads.Entity;
				if (((previousValue != value) 
							|| (this._Table_Ads.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Ads.Entity = null;
						previousValue.Table_AdCompany.Remove(this);
					}
					this._Table_Ads.Entity = value;
					if ((value != null))
					{
						value.Table_AdCompany.Add(this);
						this._id_Ad = value.id_Ad;
					}
					else
					{
						this._id_Ad = default(int);
					}
					this.SendPropertyChanged("Table_Ads");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Company_Table_AdCompany", Storage="_Table_Company", ThisKey="id_Company", OtherKey="id_Company", IsForeignKey=true)]
		public Table_Company Table_Company
		{
			get
			{
				return this._Table_Company.Entity;
			}
			set
			{
				Table_Company previousValue = this._Table_Company.Entity;
				if (((previousValue != value) 
							|| (this._Table_Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Company.Entity = null;
						previousValue.Table_AdCompany.Remove(this);
					}
					this._Table_Company.Entity = value;
					if ((value != null))
					{
						value.Table_AdCompany.Add(this);
						this._id_Company = value.id_Company;
					}
					else
					{
						this._id_Company = default(int);
					}
					this.SendPropertyChanged("Table_Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Ads")]
	public partial class Table_Ads : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Ad;
		
		private string _adTitle;
		
		private string _adConfirm;
		
		private System.DateTime _adDatePublic;
		
		private string _adText;
		
		private int _id_Rubric;
		
		private EntitySet<Table_AdCompany> _Table_AdCompany;
		
		private EntitySet<Table_RubAd> _Table_RubAd;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_AdChanging(int value);
    partial void Onid_AdChanged();
    partial void OnadTitleChanging(string value);
    partial void OnadTitleChanged();
    partial void OnadConfirmChanging(string value);
    partial void OnadConfirmChanged();
    partial void OnadDatePublicChanging(System.DateTime value);
    partial void OnadDatePublicChanged();
    partial void OnadTextChanging(string value);
    partial void OnadTextChanged();
    partial void Onid_RubricChanging(int value);
    partial void Onid_RubricChanged();
    #endregion
		
		public Table_Ads()
		{
			this._Table_AdCompany = new EntitySet<Table_AdCompany>(new Action<Table_AdCompany>(this.attach_Table_AdCompany), new Action<Table_AdCompany>(this.detach_Table_AdCompany));
			this._Table_RubAd = new EntitySet<Table_RubAd>(new Action<Table_RubAd>(this.attach_Table_RubAd), new Action<Table_RubAd>(this.detach_Table_RubAd));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Ad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Ad
		{
			get
			{
				return this._id_Ad;
			}
			set
			{
				if ((this._id_Ad != value))
				{
					this.Onid_AdChanging(value);
					this.SendPropertyChanging();
					this._id_Ad = value;
					this.SendPropertyChanged("id_Ad");
					this.Onid_AdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string adTitle
		{
			get
			{
				return this._adTitle;
			}
			set
			{
				if ((this._adTitle != value))
				{
					this.OnadTitleChanging(value);
					this.SendPropertyChanging();
					this._adTitle = value;
					this.SendPropertyChanged("adTitle");
					this.OnadTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adConfirm", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string adConfirm
		{
			get
			{
				return this._adConfirm;
			}
			set
			{
				if ((this._adConfirm != value))
				{
					this.OnadConfirmChanging(value);
					this.SendPropertyChanging();
					this._adConfirm = value;
					this.SendPropertyChanged("adConfirm");
					this.OnadConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adDatePublic", DbType="DateTime NOT NULL")]
		public System.DateTime adDatePublic
		{
			get
			{
				return this._adDatePublic;
			}
			set
			{
				if ((this._adDatePublic != value))
				{
					this.OnadDatePublicChanging(value);
					this.SendPropertyChanging();
					this._adDatePublic = value;
					this.SendPropertyChanged("adDatePublic");
					this.OnadDatePublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adText", DbType="NVarChar(MAX)")]
		public string adText
		{
			get
			{
				return this._adText;
			}
			set
			{
				if ((this._adText != value))
				{
					this.OnadTextChanging(value);
					this.SendPropertyChanging();
					this._adText = value;
					this.SendPropertyChanged("adText");
					this.OnadTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Rubric", DbType="Int NOT NULL")]
		public int id_Rubric
		{
			get
			{
				return this._id_Rubric;
			}
			set
			{
				if ((this._id_Rubric != value))
				{
					this.Onid_RubricChanging(value);
					this.SendPropertyChanging();
					this._id_Rubric = value;
					this.SendPropertyChanged("id_Rubric");
					this.Onid_RubricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Ads_Table_AdCompany", Storage="_Table_AdCompany", ThisKey="id_Ad", OtherKey="id_Ad")]
		public EntitySet<Table_AdCompany> Table_AdCompany
		{
			get
			{
				return this._Table_AdCompany;
			}
			set
			{
				this._Table_AdCompany.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Ads_Table_RubAd", Storage="_Table_RubAd", ThisKey="id_Ad", OtherKey="id_Ad")]
		public EntitySet<Table_RubAd> Table_RubAd
		{
			get
			{
				return this._Table_RubAd;
			}
			set
			{
				this._Table_RubAd.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_AdCompany(Table_AdCompany entity)
		{
			this.SendPropertyChanging();
			entity.Table_Ads = this;
		}
		
		private void detach_Table_AdCompany(Table_AdCompany entity)
		{
			this.SendPropertyChanging();
			entity.Table_Ads = null;
		}
		
		private void attach_Table_RubAd(Table_RubAd entity)
		{
			this.SendPropertyChanging();
			entity.Table_Ads = this;
		}
		
		private void detach_Table_RubAd(Table_RubAd entity)
		{
			this.SendPropertyChanging();
			entity.Table_Ads = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Company")]
	public partial class Table_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Company;
		
		private string _companyPersonName;
		
		private string _companyPersonSurname;
		
		private string _companyPersonSecName;
		
		private string _companyName;
		
		private string _companyPackage;
		
		private int _companyPhone;
		
		private string _companyAdress;
		
		private string _companySite;
		
		private string _companyMail;
		
		private System.Nullable<int> _companyFax;
		
		private string _companyInfo;
		
		private System.Nullable<System.DateTime> _companyPackEndDate;
		
		private EntitySet<Table_AdCompany> _Table_AdCompany;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_CompanyChanging(int value);
    partial void Onid_CompanyChanged();
    partial void OncompanyPersonNameChanging(string value);
    partial void OncompanyPersonNameChanged();
    partial void OncompanyPersonSurnameChanging(string value);
    partial void OncompanyPersonSurnameChanged();
    partial void OncompanyPersonSecNameChanging(string value);
    partial void OncompanyPersonSecNameChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyPackageChanging(string value);
    partial void OncompanyPackageChanged();
    partial void OncompanyPhoneChanging(int value);
    partial void OncompanyPhoneChanged();
    partial void OncompanyAdressChanging(string value);
    partial void OncompanyAdressChanged();
    partial void OncompanySiteChanging(string value);
    partial void OncompanySiteChanged();
    partial void OncompanyMailChanging(string value);
    partial void OncompanyMailChanged();
    partial void OncompanyFaxChanging(System.Nullable<int> value);
    partial void OncompanyFaxChanged();
    partial void OncompanyInfoChanging(string value);
    partial void OncompanyInfoChanged();
    partial void OncompanyPackEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OncompanyPackEndDateChanged();
    #endregion
		
		public Table_Company()
		{
			this._Table_AdCompany = new EntitySet<Table_AdCompany>(new Action<Table_AdCompany>(this.attach_Table_AdCompany), new Action<Table_AdCompany>(this.detach_Table_AdCompany));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Company", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Company
		{
			get
			{
				return this._id_Company;
			}
			set
			{
				if ((this._id_Company != value))
				{
					this.Onid_CompanyChanging(value);
					this.SendPropertyChanging();
					this._id_Company = value;
					this.SendPropertyChanged("id_Company");
					this.Onid_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPersonName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string companyPersonName
		{
			get
			{
				return this._companyPersonName;
			}
			set
			{
				if ((this._companyPersonName != value))
				{
					this.OncompanyPersonNameChanging(value);
					this.SendPropertyChanging();
					this._companyPersonName = value;
					this.SendPropertyChanged("companyPersonName");
					this.OncompanyPersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPersonSurname", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string companyPersonSurname
		{
			get
			{
				return this._companyPersonSurname;
			}
			set
			{
				if ((this._companyPersonSurname != value))
				{
					this.OncompanyPersonSurnameChanging(value);
					this.SendPropertyChanging();
					this._companyPersonSurname = value;
					this.SendPropertyChanged("companyPersonSurname");
					this.OncompanyPersonSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPersonSecName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string companyPersonSecName
		{
			get
			{
				return this._companyPersonSecName;
			}
			set
			{
				if ((this._companyPersonSecName != value))
				{
					this.OncompanyPersonSecNameChanging(value);
					this.SendPropertyChanging();
					this._companyPersonSecName = value;
					this.SendPropertyChanged("companyPersonSecName");
					this.OncompanyPersonSecNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPackage", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string companyPackage
		{
			get
			{
				return this._companyPackage;
			}
			set
			{
				if ((this._companyPackage != value))
				{
					this.OncompanyPackageChanging(value);
					this.SendPropertyChanging();
					this._companyPackage = value;
					this.SendPropertyChanged("companyPackage");
					this.OncompanyPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPhone", DbType="Int NOT NULL")]
		public int companyPhone
		{
			get
			{
				return this._companyPhone;
			}
			set
			{
				if ((this._companyPhone != value))
				{
					this.OncompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._companyPhone = value;
					this.SendPropertyChanged("companyPhone");
					this.OncompanyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyAdress", DbType="NChar(80)")]
		public string companyAdress
		{
			get
			{
				return this._companyAdress;
			}
			set
			{
				if ((this._companyAdress != value))
				{
					this.OncompanyAdressChanging(value);
					this.SendPropertyChanging();
					this._companyAdress = value;
					this.SendPropertyChanged("companyAdress");
					this.OncompanyAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companySite", DbType="NChar(50)")]
		public string companySite
		{
			get
			{
				return this._companySite;
			}
			set
			{
				if ((this._companySite != value))
				{
					this.OncompanySiteChanging(value);
					this.SendPropertyChanging();
					this._companySite = value;
					this.SendPropertyChanged("companySite");
					this.OncompanySiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyMail", DbType="NChar(50)")]
		public string companyMail
		{
			get
			{
				return this._companyMail;
			}
			set
			{
				if ((this._companyMail != value))
				{
					this.OncompanyMailChanging(value);
					this.SendPropertyChanging();
					this._companyMail = value;
					this.SendPropertyChanged("companyMail");
					this.OncompanyMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyFax", DbType="Int")]
		public System.Nullable<int> companyFax
		{
			get
			{
				return this._companyFax;
			}
			set
			{
				if ((this._companyFax != value))
				{
					this.OncompanyFaxChanging(value);
					this.SendPropertyChanging();
					this._companyFax = value;
					this.SendPropertyChanged("companyFax");
					this.OncompanyFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyInfo", DbType="NChar(250)")]
		public string companyInfo
		{
			get
			{
				return this._companyInfo;
			}
			set
			{
				if ((this._companyInfo != value))
				{
					this.OncompanyInfoChanging(value);
					this.SendPropertyChanging();
					this._companyInfo = value;
					this.SendPropertyChanged("companyInfo");
					this.OncompanyInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPackEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> companyPackEndDate
		{
			get
			{
				return this._companyPackEndDate;
			}
			set
			{
				if ((this._companyPackEndDate != value))
				{
					this.OncompanyPackEndDateChanging(value);
					this.SendPropertyChanging();
					this._companyPackEndDate = value;
					this.SendPropertyChanged("companyPackEndDate");
					this.OncompanyPackEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Company_Table_AdCompany", Storage="_Table_AdCompany", ThisKey="id_Company", OtherKey="id_Company")]
		public EntitySet<Table_AdCompany> Table_AdCompany
		{
			get
			{
				return this._Table_AdCompany;
			}
			set
			{
				this._Table_AdCompany.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_AdCompany(Table_AdCompany entity)
		{
			this.SendPropertyChanging();
			entity.Table_Company = this;
		}
		
		private void detach_Table_AdCompany(Table_AdCompany entity)
		{
			this.SendPropertyChanging();
			entity.Table_Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_RubAd")]
	public partial class Table_RubAd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Ad;
		
		private int _id_Rubric;
		
		private EntityRef<Table_Ads> _Table_Ads;
		
		private EntityRef<Table_Rubrics> _Table_Rubrics;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_AdChanging(int value);
    partial void Onid_AdChanged();
    partial void Onid_RubricChanging(int value);
    partial void Onid_RubricChanged();
    #endregion
		
		public Table_RubAd()
		{
			this._Table_Ads = default(EntityRef<Table_Ads>);
			this._Table_Rubrics = default(EntityRef<Table_Rubrics>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Ad", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_Ad
		{
			get
			{
				return this._id_Ad;
			}
			set
			{
				if ((this._id_Ad != value))
				{
					if (this._Table_Ads.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_AdChanging(value);
					this.SendPropertyChanging();
					this._id_Ad = value;
					this.SendPropertyChanged("id_Ad");
					this.Onid_AdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Rubric", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_Rubric
		{
			get
			{
				return this._id_Rubric;
			}
			set
			{
				if ((this._id_Rubric != value))
				{
					if (this._Table_Rubrics.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_RubricChanging(value);
					this.SendPropertyChanging();
					this._id_Rubric = value;
					this.SendPropertyChanged("id_Rubric");
					this.Onid_RubricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Ads_Table_RubAd", Storage="_Table_Ads", ThisKey="id_Ad", OtherKey="id_Ad", IsForeignKey=true)]
		public Table_Ads Table_Ads
		{
			get
			{
				return this._Table_Ads.Entity;
			}
			set
			{
				Table_Ads previousValue = this._Table_Ads.Entity;
				if (((previousValue != value) 
							|| (this._Table_Ads.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Ads.Entity = null;
						previousValue.Table_RubAd.Remove(this);
					}
					this._Table_Ads.Entity = value;
					if ((value != null))
					{
						value.Table_RubAd.Add(this);
						this._id_Ad = value.id_Ad;
					}
					else
					{
						this._id_Ad = default(int);
					}
					this.SendPropertyChanged("Table_Ads");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Rubrics_Table_RubAd", Storage="_Table_Rubrics", ThisKey="id_Rubric", OtherKey="id_Rubric", IsForeignKey=true)]
		public Table_Rubrics Table_Rubrics
		{
			get
			{
				return this._Table_Rubrics.Entity;
			}
			set
			{
				Table_Rubrics previousValue = this._Table_Rubrics.Entity;
				if (((previousValue != value) 
							|| (this._Table_Rubrics.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Rubrics.Entity = null;
						previousValue.Table_RubAd.Remove(this);
					}
					this._Table_Rubrics.Entity = value;
					if ((value != null))
					{
						value.Table_RubAd.Add(this);
						this._id_Rubric = value.id_Rubric;
					}
					else
					{
						this._id_Rubric = default(int);
					}
					this.SendPropertyChanged("Table_Rubrics");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Rubrics")]
	public partial class Table_Rubrics : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Rubric;
		
		private string _rubName;
		
		private EntitySet<Table_RubAd> _Table_RubAd;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RubricChanging(int value);
    partial void Onid_RubricChanged();
    partial void OnrubNameChanging(string value);
    partial void OnrubNameChanged();
    #endregion
		
		public Table_Rubrics()
		{
			this._Table_RubAd = new EntitySet<Table_RubAd>(new Action<Table_RubAd>(this.attach_Table_RubAd), new Action<Table_RubAd>(this.detach_Table_RubAd));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Rubric", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_Rubric
		{
			get
			{
				return this._id_Rubric;
			}
			set
			{
				if ((this._id_Rubric != value))
				{
					this.Onid_RubricChanging(value);
					this.SendPropertyChanging();
					this._id_Rubric = value;
					this.SendPropertyChanged("id_Rubric");
					this.Onid_RubricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rubName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string rubName
		{
			get
			{
				return this._rubName;
			}
			set
			{
				if ((this._rubName != value))
				{
					this.OnrubNameChanging(value);
					this.SendPropertyChanging();
					this._rubName = value;
					this.SendPropertyChanged("rubName");
					this.OnrubNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Rubrics_Table_RubAd", Storage="_Table_RubAd", ThisKey="id_Rubric", OtherKey="id_Rubric")]
		public EntitySet<Table_RubAd> Table_RubAd
		{
			get
			{
				return this._Table_RubAd;
			}
			set
			{
				this._Table_RubAd.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_RubAd(Table_RubAd entity)
		{
			this.SendPropertyChanging();
			entity.Table_Rubrics = this;
		}
		
		private void detach_Table_RubAd(Table_RubAd entity)
		{
			this.SendPropertyChanging();
			entity.Table_Rubrics = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Users")]
	public partial class Table_Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Company;
		
		private string _userLogin;
		
		private string _userPassword;
		
		private string _userRole;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_CompanyChanging(int value);
    partial void Onid_CompanyChanged();
    partial void OnuserLoginChanging(string value);
    partial void OnuserLoginChanged();
    partial void OnuserPasswordChanging(string value);
    partial void OnuserPasswordChanged();
    partial void OnuserRoleChanging(string value);
    partial void OnuserRoleChanged();
    #endregion
		
		public Table_Users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Company", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Company
		{
			get
			{
				return this._id_Company;
			}
			set
			{
				if ((this._id_Company != value))
				{
					this.Onid_CompanyChanging(value);
					this.SendPropertyChanging();
					this._id_Company = value;
					this.SendPropertyChanged("id_Company");
					this.Onid_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userLogin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string userLogin
		{
			get
			{
				return this._userLogin;
			}
			set
			{
				if ((this._userLogin != value))
				{
					this.OnuserLoginChanging(value);
					this.SendPropertyChanging();
					this._userLogin = value;
					this.SendPropertyChanged("userLogin");
					this.OnuserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this.OnuserPasswordChanging(value);
					this.SendPropertyChanging();
					this._userPassword = value;
					this.SendPropertyChanged("userPassword");
					this.OnuserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRole", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string userRole
		{
			get
			{
				return this._userRole;
			}
			set
			{
				if ((this._userRole != value))
				{
					this.OnuserRoleChanging(value);
					this.SendPropertyChanging();
					this._userRole = value;
					this.SendPropertyChanged("userRole");
					this.OnuserRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
